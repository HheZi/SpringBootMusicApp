networks:
  eureka-network:
    name: eureka-network
  album-network:
    name: album-network
  user-network:
    name: user-network
  auth-network:
    name: auth-network
  author-network:
    name: author-network    
volumes:
  album-db-volume:
  user-db-volume:
  auth-db-volume:
  author-db-volume:

services:
  eureka-server: 
    build: ./Backend/eureka-server/
    container_name: eureka-server
    ports:
      - 8761:8761
    networks:
      - eureka-network
  
  api-gateway:
    build: ./Backend/api-gateway/
    container_name: api-gateway
    ports:
      - 8080:8080
    depends_on:
      - eureka-server
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    networks:
      - eureka-network

  album-db:
    image: postgres
    container_name: album-db
    volumes: 
    - album-db-volume:/var/lib/postgresql/data
    - ./Backend/album-service/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=AlbumDB 
    networks:
      - album-network

  album-service:
    build: ./Backend/album-service/
    container_name: album-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - file.temp=/home/app/temp/
      - spring.r2dbc.url=r2dbc:postgresql://album-db:5432/AlbumDB
      - spring.r2dbc.username=postgres
      - spring.r2dbc.password=postgres
    networks:
      - eureka-network
      - album-network
    depends_on:
      - album-db
      - eureka-server

  audio-service:
    build: ./Backend/audio-service/
    container_name: audio-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - audio.path=/home/app/audio/
    volumes:
      - ~/app/audio/:/audio
    networks:
      - eureka-network
    depends_on:
      - eureka-server
  
  image-service:
    build: ./Backend/image-service
    container_name: image-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - image.default=/home/app/images/default_image.png
      - image.path=/home/app/images/
    volumes:
      - ~/app/images/:/images
    networks:
      - eureka-network
    depends_on:
      - eureka-server  

  user-db:
    image: postgres
    container_name: user-db
    volumes: 
    - user-db-volume:/var/lib/postgresql/data
    - ./Backend/user-service/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=UserDB
    networks:
      - user-network

  user-service:
    build: ./Backend/user-service
    container_name: user-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.r2dbc.url=r2dbc:postgresql://user-db:5432/UserDB
      - spring.r2dbc.username=postgres
      - spring.r2dbc.password=postgres
    depends_on:
      - eureka-server
      - user-db
    networks:
      - eureka-network
      - user-network
      
  auth-db:
    image: postgres
    container_name: auth-db
    volumes: 
    - auth-db-volume:/var/lib/postgresql/data
    - ./Backend/auth-service/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=AuthDB
    networks:
      - auth-network

  auth-service:
    build: ./Backend/auth-service
    container_name: auth-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.r2dbc.url=r2dbc:postgresql://auth-db:5432/AuthDB
      - spring.r2dbc.username=postgres
      - spring.r2dbc.password=postgres
      - logging.level.org.springframework.data.r2dbc=DEBUG
    depends_on:
      - eureka-server
      - auth-db
    networks:
      - eureka-network
      - auth-network

  author-db:
    image: postgres
    container_name: author-db
    volumes: 
    - author-db-volume:/var/lib/postgresql/data
    - ./Backend/author-service/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=AuthorDB
    networks:
      - author-network

  author-service:
    build: ./Backend/author-service
    container_name: author-service
    environment:
      - eureka.instance.preferIpAddress=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - file.temp=/home/app/temp/
      - spring.r2dbc.url=r2dbc:postgresql://author-db:5432/AuthorDB
      - spring.r2dbc.username=postgres
      - spring.r2dbc.password=postgres
    networks:
      - author-network
      - eureka-network
    depends_on:
      - eureka-server
      - author-db
    
